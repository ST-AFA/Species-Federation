Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/Warpnacelle_2x6"
	IconNameKey = "Parts/Warpnacelle_2x6_Icon"
	ID = "stafa.fed_warpnacelle_2x6" // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Starfleet"
	DescriptionKey = "Parts/Warpnacelle_2x6_Desc"
	Resources
	[
		[steel, 320]
		[coil2, 80]
		[tristeel, 40]
		[antimatter, 4]
	]
	TypeCategories = [thruster, uses_power, nacelle]
	Size = [2, 6]
	IsRotateable = false
	PhysicalRect = [0, 0, 2, 6]
	SaveRect = &PhysicalRect
	BoundingRectType = Physical
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeRotations = [0, 1, 3]
	SelectionTypeID = "thrusters"
	MaxHealth = 4500
	ProhibitRects
	[
		//[default, [-2, -4, 1, 1]]	// top
		//[default, [3, -4, 1, 1]]	// top
		//[default, [4, -3, 1, 4]]	// top right
		//[default, [-3, -3, 1, 4]]	// top left
		[default, [3, 4, 1, 4]]		// bottom right
		[default, [-2, 4, 1, 4]]	// bottom left
		[default, [-1, 8, 4, 1]]	// bottom
	]
	ThrusterForce = 8000
	ThrustIncreaseTime = 4
	ThrustRecoveryTime = 2
	FuelUsage = 200
	ReceivableBuffs : ^/0/ReceivableBuffs [Engine, AntimatterPower]
	BlockedTravelCells
	[
		[0, 1]
		[1, 1]
		[0, 2]
		[1, 2]
		[0, 3]
		[1, 3]
		[0, 4]
		[1, 4]
		[0, 5]
		[1, 5]
	]
	AllowedDoorLocations
	[
		[0, -1]
		[1, -1]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [21.33, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 15
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 8000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		EngineBuffToggle
		{
			Type = BuffToggle
			BuffType = Engine
		}
		ToggledBatteryConsumer
		{
			Type = ToggledComponents
			Toggle = EngineBuffToggle
			Invert = true
			IncludeInBlueprints = true
			Components
			{
				BatteryConsumer
				{
					Type = ResourceConsumer
					ResourceType = battery
					Storage = BatteryStorage
					DefaultPriority = &/PRIORITIES/Thruster_Supply
					ResupplyThreshold = 1000
					OperationalToggle = PowerToggle
				}
			}
		}
		
		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.6, 0.6]
			Rotation = 90d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.4, 0.6]
			Rotation = 270d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				[0.6, 0.3]
				[1.4, 0.3]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		
		ThrusterAnimationSpeed
		{
			Type = MultiValue
			Values = [MainThrusterBottom, MainThrusterRight, MainThrusterLeft, MainThrusterTop]
			Mode = Max
		}
		Graphics
		{
			Type = Graphics
			Location = [1, 3]
			OperationalToggle = IsOperational
			AnimationSpeedFactor = ThrusterAnimationSpeed
			AnimationSpeedFactorRenormalize = [0.75, 2.0]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 6]
					}
					{
						File = "floor_33.png"
						Size = [2, 6]
					}
					{
						File = "floor_66.png"
						Size = [2, 6]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 6]
						AnimationInterval = 0.075
					}
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 6]
						AnimationInterval = 0.075
					}
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 6]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 6]
					}
					{
						File = "doodads_off.png"
						Size = [2, 6]
					}
					{
						File = "doodads_off.png"
						Size = [2, 6]
					}
				]
			}
			// OperationalLighting
			// {
				// Layer = "lights_add"
				// Offset = [0, .5]
				// DamageLevels
				// [
					// {
						// AnimationFiles
						// [
							// "./Data/ships/terran/thruster_small_3way/lights.png"
							// "./Data/ships/terran/thruster_small_3way/lights2.png"
						// ]
						// Size = [3, 2]
						// AnimationInterval = 0.1
					// }
				// ]
			// }
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 6]
					}
					{
						File = "walls.png"
						Size = [2, 6]
					}
					{
						File = "walls.png"
						Size = [2, 6]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 6]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 6]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 6]
					}
				]
			}

			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [2, 6]
					}
					{
						File = "roof_glows.png"
						Size = [2, 6]
					}
					{
						File = "roof_glows.png"
						Size = [2, 6]
					}
				]
			}
		}
		AddonGraphics1
		{
			Type = Graphics
			Location = [0.6, 0.6]
			OperationalToggle = IsOperational
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [1, 1]
						Z = 2.0 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [120, 254, 255]
					}
				]
			}
		}
		AddonGraphics2
		{
			Type = Graphics
			Location = [1.4, 0.6]
			OperationalToggle = IsOperational
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [1, 1]
						Z = 2.0 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [120, 254, 255]
					}
				]
			}
		}
		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, .5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroResourceSprite = false
			ResourceLevels
			[
				{
					File = "./Data/ships/terran/thruster_small_3way/batteries1.png"
					Size = [1, 1]
				}
			]
		}

		MainThrusterBottom
		{
			Type = Thruster
			Location = [1, 6] // Relative to upper-left corner of unrotated part.
			Rotation = 90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = -0.05
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		MainThrusterRight
		{
			Type = Thruster
			Location = [2, 1.5] // Relative to upper-left corner of unrotated part.
			Rotation = 0d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		MainThrusterLeft
		{
			Type = Thruster
			Location = [0, 1.5] // Relative to upper-left corner of unrotated part.
			Rotation = 180d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		MainThrusterTop
		{
			Type = Thruster
			Location = [1, 0] // Relative to upper-left corner of unrotated part.
			Rotation = 270d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = -0.05
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}
		
		
		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, .5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [1, .5]
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [1, .5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .05
					Speed = 1.5
					MaxConcurrentVolume = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 3]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 6]
		}
	}

	Stats
	{
		ThrusterForce = &~/Part/ThrusterForce
		ThrusterRampUp = &~/Part/ThrustIncreaseTime
		ThrusterPowerUsage = (&~/Part/FuelUsage) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&ThrusterPowerUsage) / 2
		RecCrew = (&RecPower) * 4
	}
}