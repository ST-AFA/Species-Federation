Part : <fed_shieldcore_switch.rules>/Part
{
	ID = "stafa.fed_shieldcore_ai_stations"
	OtherIDs = []
	Resources
	[
		[steel, 1]
		[coil, 1]
	]
	IsBuildable = &<../../misc/ai_control.rules>/IsBuildable
	Radius_XS = 15
	Radius_S = 25
	Radius_M = 35
	Radius_L = 45
	Radius_XL = 60
	ThrusterForce = 6000
	ThrustIncreaseTime = 0
	ThrustRecoveryTime = 0
	FuelUsage = 100
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		ProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = CombinedBatteryStorage
			LowColor = [0, 0, 255]
			HighColor = [0, 0, 255]
			FullColor = [0, 0, 255]
			Height = 10
		}

		ThrusterProgressBar
		{
			Type = ProgressBar
			OperationalToggle = IsOperational
			ShowProgressFor = ThrusterBatteryStorage
			LowColor = [255, 0, 0]
			HighColor = [0, 0, 255]
			FullColor = [0, 255, 0]
			Height = 10
		}
		
		ThrusterBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 10000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = ThrusterBatteryStorage
			DefaultPriority = &/PRIORITIES/Thruster_Supply
			ResupplyThreshold = 1000
			OperationalToggle = PowerToggle
		}

		CombinedBatteryStorage
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [FrontBatteryStorage, BackBatteryStorage, LeftBatteryStorage, RightBatteryStorage]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		
		//
		// BaseArcShield
		//
		BaseArcShield
		{
			Type = ArcShield
			Radius = 0.01
			Arc = 0.01d
			OperationalToggle = FrontIsOperational
			PenetrationResistance = [75, 0]
			DrainResourcesFrom = FrontBatteryStorage
			ResourceDrainPerDamage = .4
			Rotation = -90d
			Location = [2, 2]

			BlueprintArcSprite
			{
				Texture
				{
					File = "shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [0, 0, 255, 127]
			}
			BlueprintArcSpriteSegments = 64

			CoverageArcSprite
			{
				Texture
				{
					File = "shield_energy.png"
					SampleMode = Linear
					MipLevels = 1
				}
				Size = [0, 1.5]
				Color = [255, 255, 255, 127]
			}
			CoverageArcSpriteSegments = 64

			ShieldMediaEffects
			[
				{
					Type = ArcShield
					Radius = &~/Part/Components/BaseArcShield/Radius
					Arc = &~/Part/Components/BaseArcShield/Arc
					FadeInTime = .25
					FadeOutTime = .25
					FadeFromScale = .8
					ArcSprite
					{
						Texture
						{
							File = "shield_energy.png"
							SampleMode = Linear
							MipLevels = 1
						}
						Shader = "shield.shader"
						_waveTex
						{
							File = "shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "shield_mask.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = 1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [54, 0, 91, 127]
						_lowPowerColor1 = [54, 0, 91, 127]
						_fullPowerColor2 = [0, 0, 255, 127]
						_lowPowerColor2 = [255, 0, 0, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 1.5]
					}
					ArcSpriteSegments = 64
					Bucket = Lower1
				}

				: /BASE_SOUNDS/AudioExteriorDetail
				{
					Sound = "shield_loop.wav"
					Volume = .15
					Speed = .5
					MaxConcurrent = 1
					MaxConcurrentVolume = .3
					DynamicVolume : ^/0/DynamicVolume
					{
						MinDistance = .75
						MaxDistance = 1.5
					}
					IgnoreIntensity = true
				}
			]

			HitMediaEffects
			[
				{
					Type = ArcShield
					FadeInTime = .1
					FadeOutTime = .5
					Radius = &~/Part/Components/BaseArcShield/Radius
					Arc = 20d
					ArcSprite
					{
						Texture
						{
							File = "shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						Shader = "shield.shader"
						_waveTex
						{
							File = "shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "shield_energy_original.png"
							SampleMode = Linear
							MipLevels = max
						}
						_waveSpeed = -2
						_waveAlpha = .75
						_waveCurveInterval = 1
						_waveCurveMagnitude = .25
						_waveCurveUOffsetPerSecond = 0
						//TargetBlendMode = Add
						_fullPowerColor1 = [0, 0, 255, 127]
						_lowPowerColor1 = [255, 0, 0, 200]
						_fullPowerColor2 = [154, 98, 238, 127]
						_lowPowerColor2 = [236, 150, 234, 127]
						_lowPowerThicknessExponent = .6
						_xScale = 1
						TargetBlendMode = Add
						Size = [0, 3]
					}
					ArcSpriteSegments = 6
					Bucket = Upper3
				}

				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "shield_hit.wav"
					Volume = 1
					Speed = 1
					IgnoreIntensity = true
					SpeedVariation = .25
					MaxConcurrent = 10
				}
			]
		}
		
		BaseEmitterEffect
		{
			Type = ContinuousEffects
			ChainedTo = BaseArcShield
			FactorMediaEffectsIntensityWith = FrontBatteryStorage
			Location = [2.2, 0]
			OperationalToggle = FrontIsOperational
			ParentToShip = true
			MediaEffects
			[
				{
					Type = ArcShield
					Radius = 2.2
					Arc = 90d
					FadeInTime = .25
					FadeOutTime = .25
					ArcSprite
					{
						Texture
						{
							File = "shield_energy.png"
							SampleMode = Linear
							MipLevels = 1
						}
						UVRect = [0, 1, 1, -1]
						Shader = "shield.shader"
						_waveTex
						{
							File = "shield_energy_wave.png"
							UVMode = Wrap
							SampleMode = Linear
							MipLevels = max
						}
						_maskTex
						{
							File = "shield_mask.png"
							SampleMode = Linear
							MipLevels = 1
						}
						_waveSpeed = -1
						_waveAlpha = 1
						_waveCurveInterval = .5
						_waveCurveMagnitude = .35
						_waveCurveUOffsetPerSecond = .2
						_fullPowerColor1 = [54, 0, 91, 127]
						_lowPowerColor1 = [54, 0, 91, 127]
						_fullPowerColor2 = [0, 0, 255, 127]
						_lowPowerColor2 = [255, 0, 0, 127]
						_lowPowerThicknessExponent = .6
						TargetBlendMode = Add
						_xScale = 0.5
						Size = [0, 1.0]
					}
					ArcSpriteSegments = 12
					Bucket = Upper1
				}

				: /BASE_SOUNDS/AudioExteriorDetail
				{
					Sound = "shield_emitter_loop.wav"
					Volume = .2
					Speed = 1
					MaxConcurrent = 1
					MaxConcurrentVolume = .4
					IgnoreIntensity = true
				}
			]
		}

		BaseShieldOperationEffects
		{
			Type = ToggleEffects
			ChainedTo = BaseArcShield
			Location = [&~/Part/Components/BaseArcShield/Radius, 0]
			Toggle = FrontIsOperational
			ToggledOnMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "shieldraise.wav"
					Volume = .5
					Speed = 1.5
					IgnoreIntensity = true
				}
			]
			ToggledOffMediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "shieldlower.wav"
					Volume = .5
					Speed = 1.5
					IgnoreIntensity = true
				}
			]
		}
		
		//
		// Toggles
		//
		ShieldTypeToggle
		{
			Type = UIToggle
			ToggleID = "CoreShield_type"
			Default = 0
			AlwaysAllowInBuildMode = true
		}
		ShieldToggleXS
		{
			Type = ModeToggle
			Mode = ShieldTypeToggle
			OnMode = 0
		}
		ShieldToggleS
		{
			Type = ModeToggle
			Mode = ShieldTypeToggle
			OnMode = 1
		}
		ShieldToggleM
		{
			Type = ModeToggle
			Mode = ShieldTypeToggle
			OnMode = 2
		}
		ShieldToggleL
		{
			Type = ModeToggle
			Mode = ShieldTypeToggle
			OnMode = 3
		}
		ShieldToggleXL
		{
			Type = ModeToggle
			Mode = ShieldTypeToggle
			OnMode = 4
		}
		
		ToggledComponents_ArcShield_XS
		{
			Type = ToggledComponents
			Toggle = ShieldToggleXS
			IncludeInBlueprints = true
			Components =
			{
				// FRONT
				ArcShield_XS_Front : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XS
					Arc = 90d
					Rotation = -90d
					OperationalToggle = FrontIsOperational
					DrainResourcesFrom = FrontBatteryStorage
					ResourceDrainPerDamage = .2
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				FrontEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XS_Front
					FactorMediaEffectsIntensityWith = FrontBatteryStorage
					OperationalToggle = FrontIsOperational
				}
				FrontShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XS_Front
					Location = [&~/Part/Radius_XS, 0]
					Toggle = FrontIsOperational
				}
				
				// BACK
				ArcShield_XS_Back : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XS
					Arc = 90d
					Rotation = 90d
					OperationalToggle = BackIsOperational
					DrainResourcesFrom = BackBatteryStorage
					ResourceDrainPerDamage = .2
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				BackEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XS_Back
					FactorMediaEffectsIntensityWith = BackBatteryStorage
					OperationalToggle = BackIsOperational
				}
				BackShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XS_Back
					Location = [&~/Part/Radius_XS, 0]
					Toggle = BackIsOperational
				}
				
				
				// LEFT
				ArcShield_XS_Left : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XS
					Arc = 90d
					Rotation = 180d
					OperationalToggle = LeftIsOperational
					DrainResourcesFrom = LeftBatteryStorage
					ResourceDrainPerDamage = .2
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				LeftEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XS_Left
					FactorMediaEffectsIntensityWith = LeftBatteryStorage
					OperationalToggle = LeftIsOperational
				}
				LeftShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XS_Left
					Location = [&~/Part/Radius_XS, 0]
					Toggle = LeftIsOperational
				}
				
				
				// RIGHT
				ArcShield_XS_Right : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XS
					Arc = 90d
					Rotation = 0d
					OperationalToggle = RightIsOperational
					DrainResourcesFrom = RightBatteryStorage
					ResourceDrainPerDamage = .2
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				RightEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XS_Right
					FactorMediaEffectsIntensityWith = RightBatteryStorage
					OperationalToggle = RightIsOperational
				}
				RightShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XS_Right
					Location = [&~/Part/Radius_XS, 0]
					Toggle = RightIsOperational
				}
				
			}
		}
		ToggledComponents_ArcShield_S
		{
			Type = ToggledComponents
			Toggle = ShieldToggleS
			IncludeInBlueprints = true
			Components =
			{
				// FRONT
				ArcShield_S_Front : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_S
					Arc = 90d
					Rotation = -90d
					OperationalToggle = FrontIsOperational
					DrainResourcesFrom = FrontBatteryStorage
					ResourceDrainPerDamage = .15
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				FrontEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_S_Front
					FactorMediaEffectsIntensityWith = FrontBatteryStorage
					OperationalToggle = FrontIsOperational
				}
				FrontShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_S_Front
					Location = [&~/Part/Radius_S, 0]
					Toggle = FrontIsOperational
				}
				
				// BACK
				ArcShield_S_Back : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_S
					Arc = 90d
					Rotation = 90d
					OperationalToggle = BackIsOperational
					DrainResourcesFrom = BackBatteryStorage
					ResourceDrainPerDamage = .15
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				BackEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_S_Back
					FactorMediaEffectsIntensityWith = BackBatteryStorage
					OperationalToggle = BackIsOperational
				}
				BackShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_S_Back
					Location = [&~/Part/Radius_S, 0]
					Toggle = BackIsOperational
				}
				
				// LEFT
				ArcShield_S_Left : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_S
					Arc = 90d
					Rotation = 180d
					OperationalToggle = LeftIsOperational
					DrainResourcesFrom = LeftBatteryStorage
					ResourceDrainPerDamage = .15
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				LeftEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_S_Left
					FactorMediaEffectsIntensityWith = LeftBatteryStorage
					OperationalToggle = LeftIsOperational
				}
				LeftShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_S_Left
					Location = [&~/Part/Radius_S, 0]
					Toggle = LeftIsOperational
				}
				
				
				// RIGHT
				ArcShield_S_Right : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_S
					Arc = 90d
					Rotation = 0d
					OperationalToggle = RightIsOperational
					DrainResourcesFrom = RightBatteryStorage
					ResourceDrainPerDamage = .15
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				RightEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_S_Right
					FactorMediaEffectsIntensityWith = RightBatteryStorage
					OperationalToggle = RightIsOperational
				}
				RightShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_S_Right
					Location = [&~/Part/Radius_S, 0]
					Toggle = RightIsOperational
				}
				
			}
		}
		ToggledComponents_ArcShield_M
		{
			Type = ToggledComponents
			Toggle = ShieldToggleM
			IncludeInBlueprints = true
			Components =
			{
				// FRONT
				ArcShield_M_Front : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_M
					Arc = 90d
					Rotation = -90d
					OperationalToggle = FrontIsOperational
					DrainResourcesFrom = FrontBatteryStorage
					ResourceDrainPerDamage = .1
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				FrontEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_M_Front
					FactorMediaEffectsIntensityWith = FrontBatteryStorage
					OperationalToggle = FrontIsOperational
				}
				FrontShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_M_Front
					Location = [&~/Part/Radius_M, 0]
					Toggle = FrontIsOperational
				}
				
				// BACK
				ArcShield_M_Back : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_M
					Arc = 90d
					Rotation = 90d
					OperationalToggle = BackIsOperational
					DrainResourcesFrom = BackBatteryStorage
					ResourceDrainPerDamage = .1
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				BackEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_M_Back
					FactorMediaEffectsIntensityWith = BackBatteryStorage
					OperationalToggle = BackIsOperational
				}
				BackShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_M_Back
					Location = [&~/Part/Radius_M, 0]
					Toggle = BackIsOperational
				}
				
				
				// LEFT
				ArcShield_M_Left : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_M
					Arc = 90d
					Rotation = 180d
					OperationalToggle = LeftIsOperational
					DrainResourcesFrom = LeftBatteryStorage
					ResourceDrainPerDamage = .1
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				LeftEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_M_Left
					FactorMediaEffectsIntensityWith = LeftBatteryStorage
					OperationalToggle = LeftIsOperational
				}
				LeftShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_M_Left
					Location = [&~/Part/Radius_M, 0]
					Toggle = LeftIsOperational
				}
				
				
				// RIGHT
				ArcShield_M_Right : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_M
					Arc = 90d
					Rotation = 0d
					OperationalToggle = RightIsOperational
					DrainResourcesFrom = RightBatteryStorage
					ResourceDrainPerDamage = .1
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				RightEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_M_Right
					FactorMediaEffectsIntensityWith = RightBatteryStorage
					OperationalToggle = RightIsOperational
				}
				RightShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_M_Right
					Location = [&~/Part/Radius_M, 0]
					Toggle = RightIsOperational
				}
				
			}
		}
		ToggledComponents_ArcShield_L
		{
			Type = ToggledComponents
			Toggle = ShieldToggleL
			IncludeInBlueprints = true
			Components =
			{
				// FRONT
				ArcShield_L_Front : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_L
					Arc = 90d
					Rotation = -90d
					OperationalToggle = FrontIsOperational
					DrainResourcesFrom = FrontBatteryStorage
					ResourceDrainPerDamage = .05
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				FrontEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_L_Front
					FactorMediaEffectsIntensityWith = FrontBatteryStorage
					OperationalToggle = FrontIsOperational
				}
				FrontShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_L_Front
					Location = [&~/Part/Radius_L, 0]
					Toggle = FrontIsOperational
				}
				
				// BACK
				ArcShield_L_Back : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_L
					Arc = 90d
					Rotation = 90d
					OperationalToggle = BackIsOperational
					DrainResourcesFrom = BackBatteryStorage
					ResourceDrainPerDamage = .05
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				BackEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_L_Back
					FactorMediaEffectsIntensityWith = BackBatteryStorage
					OperationalToggle = BackIsOperational
				}
				BackShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_L_Back
					Location = [&~/Part/Radius_L, 0]
					Toggle = BackIsOperational
				}
				
				
				// LEFT
				ArcShield_L_Left : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_L
					Arc = 90d
					Rotation = 180d
					OperationalToggle = LeftIsOperational
					DrainResourcesFrom = LeftBatteryStorage
					ResourceDrainPerDamage = .05
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				LeftEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_L_Left
					FactorMediaEffectsIntensityWith = LeftBatteryStorage
					OperationalToggle = LeftIsOperational
				}
				LeftShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_L_Left
					Location = [&~/Part/Radius_L, 0]
					Toggle = LeftIsOperational
				}
				
				
				// RIGHT
				ArcShield_L_Right : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_L
					Arc = 90d
					Rotation = 0d
					OperationalToggle = RightIsOperational
					DrainResourcesFrom = RightBatteryStorage
					ResourceDrainPerDamage = .05
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				RightEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_L_Right
					FactorMediaEffectsIntensityWith = RightBatteryStorage
					OperationalToggle = RightIsOperational
				}
				RightShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_L_Right
					Location = [&~/Part/Radius_L, 0]
					Toggle = RightIsOperational
				}
				
			}
		}
		ToggledComponents_ArcShield_XL
		{
			Type = ToggledComponents
			Toggle = ShieldToggleXL
			IncludeInBlueprints = true
			Components =
			{
				// FRONT
				ArcShield_XL_Front : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XL
					Arc = 90d
					Rotation = -90d
					OperationalToggle = FrontIsOperational
					DrainResourcesFrom = FrontBatteryStorage
					ResourceDrainPerDamage = .015
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				FrontEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XL_Front
					FactorMediaEffectsIntensityWith = FrontBatteryStorage
					OperationalToggle = FrontIsOperational
				}
				FrontShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XL_Front
					Location = [&~/Part/Radius_XL, 0]
					Toggle = FrontIsOperational
				}
				
				// BACK
				ArcShield_XL_Back : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XL
					Arc = 90d
					Rotation = 90d
					OperationalToggle = BackIsOperational
					DrainResourcesFrom = BackBatteryStorage
					ResourceDrainPerDamage = .015
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				BackEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XL_Back
					FactorMediaEffectsIntensityWith = BackBatteryStorage
					OperationalToggle = BackIsOperational
				}
				BackShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XL_Back
					Location = [&~/Part/Radius_XL, 0]
					Toggle = BackIsOperational
				}
				
				// LEFT
				ArcShield_XL_Left : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XL
					Arc = 90d
					Rotation = 180d
					OperationalToggle = LeftIsOperational
					DrainResourcesFrom = LeftBatteryStorage
					ResourceDrainPerDamage = .015
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				LeftEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XL_Left
					FactorMediaEffectsIntensityWith = LeftBatteryStorage
					Location = [2.2, 0]
					OperationalToggle = LeftIsOperational
				}
				LeftShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XL_Left
					Location = [&~/Part/Radius_XL, 0]
					Toggle = LeftIsOperational
				}
				
				
				// RIGHT
				ArcShield_XL_Right : &~/Part/Components/BaseArcShield
				{
					Radius = &~/Part/Radius_XL
					Arc = 90d
					Rotation = 0d
					OperationalToggle = RightIsOperational
					DrainResourcesFrom = RightBatteryStorage
					ResourceDrainPerDamage = .015
					ShieldMediaEffects
					[
						{
							Type = ArcShield
							Radius = &../../Radius
							Arc = &../../Arc
							FadeInTime = .25
							FadeOutTime = .25
							FadeFromScale = .8
							ArcSprite : ~/Part/Components/BaseArcShield/ShieldMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 64
							Bucket = Lower1
						}
					]
					HitMediaEffects
					[
						{
							Type = ArcShield
							FadeInTime = 0.1
							FadeOutTime = 0.5
							Radius = &../../Radius
							Arc = &../../Arc
							ArcSprite : ~/Part/Components/BaseArcShield/HitMediaEffects/0/ArcSprite
							{
								
							}
							ArcSpriteSegments = 6
							Bucket = Upper3
						}
					]
				}
				RightEmitterEffect : &~/Part/Components/BaseEmitterEffect
				{
					ChainedTo = ArcShield_XL_Right
					FactorMediaEffectsIntensityWith = RightBatteryStorage
					OperationalToggle = RightIsOperational
				}
				RightShieldOperationEffects : &~/Part/Components/BaseShieldOperationEffects
				{
					Type = ToggleEffects
					ChainedTo = ArcShield_XL_Right
					Location = [&~/Part/Radius_XL, 0]
					Toggle = RightIsOperational
				}
				
			}
		}
		
		//
		// Frontshield
		//
		FrontIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, FrontBatteryStorage]
			Mode = All
		}
		FrontBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 24000
			ToggleOnResources = 23001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		FrontBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = FrontBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		FrontPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = FrontIsOperational
			FromStorage = FrontBatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		
		//
		// Backshield
		//
		BackIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BackBatteryStorage]
			Mode = All
		}
		BackBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 12000
			ToggleOnResources = 11001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BackBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BackBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		BackPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = BackIsOperational
			FromStorage = BackBatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		
		//
		// Leftshield
		//
		LeftIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, LeftBatteryStorage]
			Mode = All
		}
		LeftBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 16000
			ToggleOnResources = 15001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		LeftBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = LeftBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		LeftPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = LeftIsOperational
			FromStorage = LeftBatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		
		//
		// Rightshield
		//
		RightIsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, RightBatteryStorage]
			Mode = All
		}
		RightBatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 16000
			ToggleOnResources = 15001
			DrainOnFtlJump = true
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		RightBatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = RightBatteryStorage
			DefaultPriority = &/PRIORITIES/Defense_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		RightPowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = RightIsOperational
			FromStorage = RightBatteryStorage
			FromQuantity = 100
			MinFromQuantityForConversion = 1
			Interval = 1
		}
		
		//
		// Crew
		//
		
		CrewLocation1
		{
			Type = CrewLocation
			Location = [2, 0.9]
			Rotation = 180d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [2, 3.1]
			Rotation = 0d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [0.9, 2]
			Rotation = 90d
		}
		CrewLocation4
		{
			Type = CrewLocation
			Location = [3.1, 2]
			Rotation = 270d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			CrewDestinations
			[
				[2, 0.6]
				[2, 3.4]
				[0.6, 2]
				[3.4, 2]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
				CrewLocation3
				CrewLocation4
			]
			SwitchLocationInterval = [5, 10]
		}
		
		//
		// Graphics
		//
		
		Graphics
		{
			Type = Graphics
			Location = [2, 2]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [4, 4]
					}
					{
						File = "floor_33.png"
						Size = [4, 4]
					}
					{
						File = "floor_66.png"
						Size = [4, 4]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				Offset = [0, 0]
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
							"doodads_on9.png"
							"doodads_on10.png"
							"doodads_on11.png"
							"doodads_on12.png"
							"doodads_on13.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
							"doodads_on9.png"
							"doodads_on10.png"
							"doodads_on11.png"
							"doodads_on12.png"
						]
						Size = [2, 2]
						AnimationInterval = 0.075
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [4, 4]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [4, 4]
					}
					{
						File = "walls_33.png"
						Size = [4, 4]
					}
					{
						File = "walls_66.png"
						Size = [4, 4]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [4, 4]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [4, 4]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [4, 4]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [4, 4]
					}
					{
						File = "roof_glows_33.png"
						Size = [4, 4]
					}
					{
						File = "roof_glows_66.png"
						Size = [4, 4]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [5, 5]
						Z = 1 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
						VertexColor = [195*1.5, 60*1.5, 255*1.5]
					}
				]
			}
		}

// Bis es neue gibts auskommentiert.
//		BatterySprites
//		{
//			Type = ResourceSprites
//			Location = [1, 1.59375]
//			ResourceStorage = FrontBatteryStorage
//			Layer = "doodads_low"
//			ResourceLevels
//			[
//				{
//					File = "batteries1.png"
//					Size = [2, 1]
//				}
//				{
//					File = "batteries2.png"
//					Size = [2, 1]
//				}
//				{
//					File = "batteries3.png"
//					Size = [2, 1]
//				}
//				{
//					File = "batteries4.png"
//					Size = [2, 1]
//				}
//				{
//					File = "batteries5.png"
//					Size = [2, 1]
//				}
//				{
//					File = "batteries6.png"
//					Size = [2, 1]
//				}
//			]
//		}
//		RoofBatterySprites
//		{
//			Type = ResourceSprites
//			Location = [1, 1.6875]
//			ResourceStorage = FrontBatteryStorage
//			Layer = "roof_doodads"
//			ResourceLevels
//			[
//				{
//					File = "roof_batteries1.png"
//					Offset = [-0.5, 0]
//					Size = [1, 1]
//				}
//				{
//					File = "roof_batteries2.png"
//					Size = [2, 1]
//				}
//				{
//					File = "roof_batteries3.png"
//					Size = [2, 1]
//				}
//				{
//					File = "roof_batteries4.png"
//					Size = [2, 1]
//				}
//				{
//					File = "roof_batteries5.png"
//					Size = [2, 1]
//				}
//				{
//					File = "roof_batteries6.png"
//					Size = [2, 1]
//				}
//			]
//		}

		ThrusterBottom
		{
			Type = Thruster
			Location = [2, 4] // Relative to upper-left corner of unrotated part.
			Rotation = 90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = ThrusterBatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		ThrusterRight
		{
			Type = Thruster
			Location = [4, 2] // Relative to upper-left corner of unrotated part.
			Rotation = 0d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = ThrusterBatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		ThrusterLeft
		{
			Type = Thruster
			Location = [0, 2] // Relative to upper-left corner of unrotated part.
			Rotation = 180d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = ThrusterBatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		ThrusterTop
		{
			Type = Thruster
			Location = [2, 0] // Relative to upper-left corner of unrotated part.
			Rotation = 270d // Relative to unrotated part.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = 0
			MaxActivation = { BaseValue=1; BuffType=Engine; BuffMode=Multiply; }
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			ActivationIncreaseTime = &../../ThrustIncreaseTime
			ActivationRecoveryTime = &../../ThrustRecoveryTime
			FuelStorage = ThrusterBatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}
		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [2, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [2, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = FrontBatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}
				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [4, 4]
		}
	}

	Stats
	{
		ShieldHP = (&~/Part/Components/FrontBatteryStorage/MaxResources) / (&<BaseShield.rules>/Part/Components/BaseArcShield/ResourceDrainPerDamage)
		ShieldPenResist = &<BaseShield.rules>/Part/Components/BaseArcShield/PenetrationResistance/0
		ShieldArc = deg(&<BaseShield.rules>/Part/Components/BaseArcShield/Arc)
		ShieldDist = (&<BaseShield.rules>/Part/Components/BaseArcShield/Radius) - (&<BaseShield.rules>/Part/Components/BaseArcShield/Location/1)
		PowerUsageContinuous = (&~/Part/Components/FrontPowerDrain/FromQuantity) / (&~/Part/Components/FrontPowerDrain/Interval) / 1000
		PowerCapacity = (&~/Part/Components/FrontBatteryStorage/MaxResources) / 1000

		RecPower = (&PowerUsageContinuous) + 0.5
		RecCrew = (&RecPower) * 4
	}
}